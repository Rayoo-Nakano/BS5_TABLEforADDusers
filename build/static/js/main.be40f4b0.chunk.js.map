{"version":3,"sources":["components/Delivery.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Delivery","initCurrentUser","id","customer","customer_branch","postcode","prefecture","municipality","address1","address2","department","responsibleparty","tel","email","_useState","useState","_useState2","Object","slicedToArray","users","setUsers","_useState3","_useState4","show","setShow","_useState5","_useState6","newUser","setNewUser","_useState7","_useState8","showCreateBtn","setShowCreateBtn","_useState9","_useState10","editing","setEdit","_useState11","_useState12","handleClose","handleShow","onSubmit","onUpdateUser","length","concat","toConsumableArray","objectSpread","onFormSubmit","map","i","react_default","a","createElement","Container","fluid","Row","Col","Card","className","Body","Title","Toggle","checked","onClick","e","preventDefault","Button","variant","size","title","index_esm","Table","striped","bordered","hover","user","index","key","currentUser","filter","colSpan","Modal","onHide","Form","Header","closeButton","Group","controlId","Label","Control","type","value","required","onChange","target","placeholder","Footer","disabled","App","Delivery_Delivery","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.be40f4b0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Modal,\r\n  Row,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { Toggle } from \"rsuite\";\r\nimport \"../App.css\";\r\nimport { FaPencilAlt, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\nimport { User } from \"./Interface\";\r\n\r\nexport const Delivery = () => {\r\n  const defaultUsers = [\r\n    {\r\n      id: 1,\r\n      customer: \"ABC株式会社 栃木工場\",\r\n      postcode: \"1234567\",\r\n      prefecture: \"栃木県\",\r\n      municipality: \"日光市\",\r\n      address1: \"〇〇△△１－１－１\",\r\n      address2: \"\",\r\n      department: \"生産1部\",\r\n      responsibleparty: \"山田次郎\",\r\n      tel: \"044-1234-5678\",\r\n      email: \"yamada@abc.com\",\r\n    },\r\n    {\r\n      id: 2,\r\n      customer: \"ABC株式会社 小田原工場\",\r\n      postcode: \"1234567\",\r\n      prefecture: \"神奈川県\",\r\n      municipality: \"小田原市\",\r\n      address1: \"〇〇町△△１－１－１\",\r\n      address2: \"\",\r\n      department: \"生産1部\",\r\n      responsibleparty: \"山田次郎\",\r\n      tel: \"044-1234-5678\",\r\n      email: \"yamada@abc.com\",\r\n    },\r\n    {\r\n      id: 3,\r\n      customer: \"株式会社XYZ 東京本社\",\r\n      postcode: \"1234567\",\r\n      prefecture: \"東京都\",\r\n      municipality: \"港区\",\r\n      address1: \"〇〇△△１－１－１\",\r\n      address2: \"XYZビル7F\",\r\n      department: \"生産1部\",\r\n      responsibleparty: \"山田次郎\",\r\n      tel: \"044-1234-5678\",\r\n      email: \"yamada@abc.com\",\r\n    },\r\n  ];\r\n\r\n  const initCurrentUser = {\r\n    id: null,\r\n    customer: \"\",\r\n    customer_branch: \"\",\r\n    postcode: \"\",\r\n    prefecture: \"\",\r\n    municipality: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    department: \"\",\r\n    responsibleparty: \"\",\r\n    tel: \"\",\r\n    email: \"\",\r\n  };\r\n\r\n  const [users, setUsers] = useState(defaultUsers);\r\n  const [show, setShow] = useState(false);\r\n  const [newUser, setNewUser] = useState(initCurrentUser);\r\n  const [showCreateBtn, setShowCreateBtn] = useState(true);\r\n  const [editing, setEdit] = useState(false);\r\n  const [rates, setRates] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    if (editing === false) {\r\n      setNewUser(initCurrentUser);\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (newUser: any) => {\r\n    const id = users.length + 1;\r\n    setUsers([...users, { ...newUser, id }]);\r\n  };\r\n\r\n  const onEdit = (newUser: any) => {\r\n    setEdit(true);\r\n    if (editing === true) {\r\n      setNewUser({ ...newUser, newUser });\r\n      handleShow();\r\n    }\r\n\r\n  };\r\n\r\n  const onSubmit = (newUser: any) => {\r\n    if (editing === true) {\r\n      onUpdateUser(newUser);\r\n    } else {\r\n      onFormSubmit(newUser);\r\n    }\r\n  };\r\n\r\n  const onUpdateUser = (newUser: User) => {\r\n    setEdit(false);\r\n    let id = newUser.id;\r\n    setUsers(users.map((i) => (i.id === id ? newUser : i)));\r\n  };\r\n\r\n  const onDeleteUser = (currentUser: User) => {\r\n    setUsers(users.filter((i) => i.id !== currentUser.id));\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"lg\">\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"customCard\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between customCardBody\">\r\n                <div>\r\n                  <Card.Title>納品先</Card.Title>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                  <Toggle\r\n                    className=\"userToggleBtn\"\r\n                    checked={showCreateBtn}\r\n                    onClick={(e: any) => {\r\n                      e.preventDefault();\r\n                      setShowCreateBtn(!showCreateBtn);\r\n                    }}\r\n                  />\r\n                  {showCreateBtn ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={handleShow}\r\n                      title=\"追加\"\r\n                    >\r\n                      <FaPlus />\r\n                    </Button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Table striped bordered hover variant=\"light\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>顧客名</th>\r\n                    <th>郵便番号</th>\r\n                    <th>都道府県</th>\r\n                    <th>市区町村</th>\r\n                    <th>番地</th>\r\n                    <th>ビル名等</th>\r\n                    <th>部署名</th>\r\n                    <th>担当者</th>\r\n                    <th>電話番号</th>\r\n                    <th>電子メール</th>\r\n                    <th>操作</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {users.length > 0 ? (\r\n                    users.map((user, index) => (\r\n                      <tr key={index}>\r\n                        <td>{user.id}</td>\r\n                        <td>{user.customer}</td>\r\n                        <td>{user.postcode}</td>\r\n                        <td>{user.prefecture}</td>\r\n                        <td>{user.municipality}</td>\r\n                        <td>{user.address1}</td>\r\n                        <td>{user.address2}</td>\r\n                        <td>{user.department}</td>\r\n                        <td>{user.responsibleparty}</td>\r\n                        <td>{user.tel}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>\r\n                          <Button\r\n                            variant=\"info\"\r\n                            size=\"sm\"\r\n                            title=\"編集\"\r\n                            onClick={() => onEdit(user)}\r\n                          >\r\n                            <FaPencilAlt size={12}/>\r\n                          </Button>{\" \"}\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            size=\"sm\"\r\n                            title=\"削除\"\r\n                            onClick={() => onDeleteUser(user)}\r\n                          >\r\n                            <FaTrashAlt size={12}/>\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={12} className=\"text-center\">\r\n                        No users found.\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                onSubmit(newUser);\r\n              }}\r\n            >\r\n              <Modal.Header closeButton>\r\n                {\r\n                  editing === true\r\n                    ? <Modal.Title>編集</Modal.Title>\r\n                    : <Modal.Title>追加</Modal.Title>\r\n                }\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                  <Form.Label>顧客名</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.customer}\r\n                    required\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, customer: e.target.value })\r\n                    }\r\n                    placeholder=\"顧客名\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicAge\">\r\n                  <Form.Label>郵便番号</Form.Label>\r\n                  <Form.Control\r\n                    type=\"neumber\"\r\n                    value={newUser.postcode}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, postcode: e.target.value })\r\n                    }\r\n                    placeholder=\"郵便番号\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicAge\">\r\n                  <Form.Label>都道府県</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.prefecture}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, prefecture: e.target.value })\r\n                    }\r\n                    placeholder=\"都道府県\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>市区町村</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.municipality}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, municipality: e.target.value })\r\n                    }\r\n                    placeholder=\"市区町村\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>番地</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.address1}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, address1: e.target.value })\r\n                    }\r\n                    placeholder=\"番地\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>ビル名等</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.address2}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, address2: e.target.value })\r\n                    }\r\n                    placeholder=\"ビル名等\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>部署</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.department}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, department: e.target.value })\r\n                    }\r\n                    placeholder=\"部署\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>担当者</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.responsibleparty}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, responsibleparty: e.target.value })\r\n                    }\r\n                    placeholder=\"担当者\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>電話番号</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.tel}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, tel: e.target.value })\r\n                    }\r\n                    placeholder=\"電話番号\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProfession\">\r\n                  <Form.Label>電子メール</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newUser.email}\r\n                    onChange={(e) =>\r\n                      setNewUser({ ...newUser, email: e.target.value })\r\n                    }\r\n                    placeholder=\"電子メール\"\r\n                  />\r\n                </Form.Group>\r\n\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                {editing === true ? (\r\n                  <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n                    Update\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant=\"primary\" disabled={!newUser.customer} type=\"submit\" onClick={handleClose}>\r\n                    Submit\r\n                  </Button>\r\n                )}\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { Delivery } from \"./components/Delivery\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 className=\"App-title\">納品先</h1>\r\n      </header>\r\n      <Delivery></Delivery>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}